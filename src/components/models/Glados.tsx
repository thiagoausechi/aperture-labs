/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf 
Author: Mm123 (https://sketchfab.com/Mm123)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/glados-5d0fd7ca99d64709b27de908a010371d
Title: GLaDOS
*/

import { useAnimations, useGLTF } from "@react-three/drei";
import { SkinnedMeshProps, useGraph } from "@react-three/fiber";
import React from "react";
import { Group, Object3DEventMap } from "three";
import { SkeletonUtils } from "three-stdlib";

export default function Model(props: JSX.IntrinsicElements["group"]) {
  const group = React.useRef<Group<Object3DEventMap>>(null);
  const { scene, animations } = useGLTF("/glados/scene.gltf");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);

  React.useEffect(() => {
    actions["glados_animation.qc_skeleton|glados_loopsmall"]?.play();
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group
            name="de8c531942f34615befd5dddf9f54e52fbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="Light"
                  position={[407.625, 590.386, -100.545]}
                  rotation={[1.89, 0.881, -2.045]}
                  scale={100}
                >
                  <group name="Object_5" rotation={[Math.PI / 2, 0, 0]}>
                    <group name="Object_6" />
                  </group>
                </group>
                <group
                  name="Camera"
                  position={[735.889, 495.831, 692.579]}
                  rotation={[Math.PI, 0.756, 2.68]}
                  scale={100}
                >
                  <group name="Object_8" />
                </group>
                <group
                  name="glados_animation_model"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <group
                  name="body1_model0"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                />
                <group
                  name="glados_animationqc_skeleton"
                  rotation={[-Math.PI / 2, 0, 0]}
                  scale={100}
                >
                  <group name="Object_12">
                    <primitive object={nodes._rootJoint} />
                    <group
                      name="Object_14"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={100}
                    />
                    <group
                      name="Object_19"
                      rotation={[-Math.PI / 2, 0, 0]}
                      scale={100}
                    />
                    <skinnedMesh
                      name="Object_15"
                      geometry={
                        (nodes.Object_15 as unknown as SkinnedMeshProps)
                          .geometry
                      }
                      material={materials.glados_cables}
                      skeleton={
                        (nodes.Object_15 as unknown as SkinnedMeshProps)
                          .skeleton
                      }
                    />
                    <skinnedMesh
                      name="Object_16"
                      geometry={
                        (nodes.Object_16 as unknown as SkinnedMeshProps)
                          .geometry
                      }
                      material={materials.glados_head}
                      skeleton={
                        (nodes.Object_16 as unknown as SkinnedMeshProps)
                          .skeleton
                      }
                    />
                    <skinnedMesh
                      name="Object_17"
                      geometry={
                        (nodes.Object_17 as unknown as SkinnedMeshProps)
                          .geometry
                      }
                      material={materials.glados_selfillum}
                      skeleton={
                        (nodes.Object_17 as unknown as SkinnedMeshProps)
                          .skeleton
                      }
                    />
                    <skinnedMesh
                      name="Object_18"
                      geometry={
                        (nodes.Object_18 as unknown as SkinnedMeshProps)
                          .geometry
                      }
                      material={materials.glados_hips}
                      skeleton={
                        (nodes.Object_18 as unknown as SkinnedMeshProps)
                          .skeleton
                      }
                    />
                    <skinnedMesh
                      name="Object_20"
                      geometry={
                        (nodes.Object_20 as unknown as SkinnedMeshProps)
                          .geometry
                      }
                      material={materials.glados_hips}
                      skeleton={
                        (nodes.Object_20 as unknown as SkinnedMeshProps)
                          .skeleton
                      }
                    />
                    <skinnedMesh
                      name="Object_21"
                      geometry={
                        (nodes.Object_21 as unknown as SkinnedMeshProps)
                          .geometry
                      }
                      material={materials.glados_chest}
                      skeleton={
                        (nodes.Object_21 as unknown as SkinnedMeshProps)
                          .skeleton
                      }
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/glados/scene.gltf");
